default:
  image: denoland/deno:latest

# curl -fsSL https://deno.land/install.sh | sh
# curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

stages:
  - Test
  - Build
  - Deploy

Tests:
  stage: Test
  script:
    - deno task tests
    - deno task coverage

Lint:
  stage: Test
  script:
    - deno task lint
    - deno fmt --check

Cli:
  stage: Build
  script: deno task cli:build ; mv bin/zzz ./
  artifacts:
    name: zzz-cli
    paths:
      - ./zzz
    expire_in: 1 day

Tui:
  stage: Build
  script: deno task tui:build ; mv bin/zzz ./
  artifacts:
    name: zzz-tui
    paths:
      - ./zzz
    expire_in: 1 day

Http:
  stage: Build
  script: deno task http:build ; mv bin/zzz-server ./
  artifacts:
    name: zzz-server
    paths:
      - ./zzz-server
    expire_in: 1 day

Web:
  stage: Build
  script:
    - deno cache src/lib/npm_deps.ts
    - deno task vite build
  artifacts:
    name: zzz-web
    paths:
      - ./src/apps/zzz/interfaces/web/dist
    expire_in: 1 day

# Desktop:
#   image: rustdocker/rust:stable
#   stage: Build
# only:
#   - main
#   script:
#     - cd src/apps/zzz/interfaces/desktop/
#     - cargo install tauri-cli
#     # - deno task desktop:build ; mv src/apps/zzz/interfaces/desktop/target/release/Zzz ./zzz-desktop
#     - cargo tauri build
#     - mv src/apps/zzz/interfaces/desktop/target/release/Zzz ./zzz-desktop
#   artifacts:
#     name: zzz-desktop
#     paths:
#       - ./zzz-desktop
#     expire_in: 1 day

DeployWeb:
  stage: Deploy
  only:
    - main
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
# https://docs.gitlab.com/ee/user/project/releases/release_cicd_examples.html
