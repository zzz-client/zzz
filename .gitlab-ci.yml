default:
  image: denoland/deno:1.40.4 # unzip is not included > 1.40.5; see https://github.com/denoland/deno_docker/issues/344

stages:
  - Test
  - Build
  - Package
  - Deploy

Tests:
  stage: Test
  script:
    - deno task tests
    - deno task coverage

Lint:
  stage: Test
  script:
    - deno task lint
    - deno fmt --check

Linux:
  image: rustdocker/rust:stable
  stage: Build
  script:
    - deno task build:cli:linux
    - deno task build:tui:linux
    - deno task build:http:linux
    - deno task build:web:linux
    - cd src/desktop/
    - cargo install tauri-cli
    - deno task build:desktop
    - cd ../../
    - mv dist/release/Zzz dist/zzz-desktop
  artifacts:
    name: x86_64-unknown-linux-gnu
    paths:
      - dist
    expire_in: 1 day

Windows:
  image: rustdocker/rust:stable
  stage: Build
  script:
    - deno task build:cli:windows
    - deno task build:tui:windows
    - deno task build:http:windows
    - deno task build:web:windows
    - echo Cross compilation is not yet supported for Tauri
  artifacts:
    name: x86_64-pc-windows-msvc
    paths:
      - dist
    expire_in: 1 day

Mac:
  image: rustdocker/rust:stable
  stage: Build
  script:
    - deno task build:cli:mac:x86
    - deno task build:tui:mac:x86
    - deno task build:http:mac:x86
    - deno task build:web:mac:x86
    - echo Cross compilation is not yet supported for Tauri
  artifacts:
    name: x86_64-apple-darwin
    paths:
      - dist
    expire_in: 1 day

MacARM:
  image: rustdocker/rust:stable
  stage: Build
  script:
    - deno task build:cli:mac:arm
    - deno task build:tui:mac:arm
    - deno task build:http:mac:arm
    - deno task build:web:mac
    - echo Cross compilation is not yet supported for Tauri
  artifacts:
    name: x86_64-apple-darwin
    paths:
      - dist
    expire_in: 1 day

Desktop:
  image: rustdocker/rust:stable
  stage: Build
  only:
    - main
  script:
    - cd src/desktop/
    - cargo install tauri-cli
    - deno task desktop:build
  artifacts:
    name: zzz-desktop
    paths:
      - ./zzz-desktop
    expire_in: 1 day

WindowsInstaller:
  image: debian:stable
  stage: Package
  dependencies: [Desktop]
  only:
    - main
  script:
    # - curl --location --output artifacts.zip "https://gitlab.example.com/api/v4/projects/1/jobs/artifacts/main/download?job=test&job_token=$CI_JOB_TOKEN"
    - apt-get -qq -o dir::cache::archives="$CI_PROJECT_DIR/.cache/apt" install -y zip nsis
    - makensis scripts/desktop.nsi
  artifacts:
    name: zzz-win-setup
    paths:
      - ./zzz-setup.exe
    expire_in: 1 day

ArchPackage:
  image: archlinux/base
  stage: Package
  only:
    - main
  script:
    - cd scripts
    - makepkg
    - mv *.pkg.tar.zst ../
  artifacts:
    name: zzz-pacman
    paths:
      - "*.pkg.tar.zst"
    expire_in: 1 day

DeployWeb:
  stage: Deploy
  only:
    - main
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
# https://docs.gitlab.com/ee/user/project/releases/release_cicd_examples.html
