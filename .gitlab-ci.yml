default:
  image: denoland/deno:1.40.4 # unzip is not included > 1.40.5; see https://github.com/denoland/deno_docker/issues/344

# curl -fsSL https://deno.land/install.sh | sh
# curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

stages:
  - Test
  - Build
  - Deploy

Tests:
  stage: Test
  script:
    - deno task tests
    - deno task coverage

Lint:
  stage: Test
  script:
    - deno task lint
    - deno fmt --check

Cli:
  stage: Build
  script: deno task cli:build ; mv dist/zzz ./
  artifacts:
    name: zzz-cli
    paths:
      - ./zzz
    expire_in: 1 day

Tui:
  stage: Build
  script: deno task tui:build ; mv dist/zzz-tui ./
  artifacts:
    name: zzz-tui
    paths:
      - ./zzz
    expire_in: 1 day

Http:
  stage: Build
  script: deno task http:build ; mv dist/zzz-server ./
  artifacts:
    name: zzz-server
    paths:
      - ./zzz-server
    expire_in: 1 day

Web:
  stage: Build
  script:
    # - deno cache src/core/npm_deps.ts
    - deno task web:build
    - mv dist/web ./zzz-web
  artifacts:
    name: zzz-web
    paths:
      - ./zzz-web
    expire_in: 1 day

Desktop:
  image: rustdocker/rust:stable
  stage: Build
  only:
    - main
  script:
    - cd src/desktop/
    # apt install -y protobuf-compiler
    - cargo install deno
    - cargo install tauri-cli
    - deno task desktop:build
    - mv src/desktop/target/release/Zzz ./zzz-desktop
  artifacts:
    name: zzz-desktop
    paths:
      - ./zzz-desktop
    expire_in: 1 day

DeployWeb:
  stage: Deploy
  only:
    - main
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
# https://docs.gitlab.com/ee/user/project/releases/release_cicd_examples.html
